source("https://www.stgries.info/teaching/groningen/coll.analysis.r")
View(coll.analysis)
View(collexemes)
#pre:
install.packages(file.choose(),repos = NULL)
setwd("~/Documents/GitHub/R-essais/RMD")
knit_with_parameters("~/Documents/GitHub/R-essais/RMD/rmd-to-git-md.Rmd")
library(rmarkdown)
library(knitr)
?render_markdown()
?knit
knit("rmd-to-git-md.Rmd",output_format(keep_md = T))
?output_format
knit("rmd-to-git-md.Rmd",output_format(knitr = knitr_options(opts_chunk = list(dev = 'png')),
pandoc = pandoc_options(to = "html"),keep_md = T))
?knit
knit("rmd-to-git-md.Rmd",output=".",output_format(knitr = knitr_options(opts_chunk = list(dev = 'png')),
pandoc = pandoc_options(to = "html"),keep_md = T))
knit("rmd-to-git-md.Rmd",output="README.md",output_format(knitr = knitr_options(opts_chunk = list(dev = 'png')),
pandoc = pandoc_options(to = "html"),keep_md = T))
knit("rmd-to-git-md.Rmd",output="README.md",output_format(knitr = knitr_options(opts_chunk = list(dev = 'png')),
pandoc = pandoc_options(to = "html"),keep_md = T))
knit("rmd-to-git-md.Rmd",output="README.md")#,output_format(knitr = knitr_options(opts_chunk = list(dev = 'png')),
?output_format
?knit
knit("rmd-to-git-md.Rmd",output="README.md")#,output_format(knitr = knitr_options(opts_chunk = list(dev = 'png')),
setwd("~/Documents/GitHub/SPUND-LX/corpusLX/14015-HA")
source("~/Documents/GitHub/SPUND-LX/corpusLX/14015-HA/knitrmd.R")
#?render_markdown()
#?knit
#?output_format
knit("README.Rmd",output="README.md")#,output_format(knitr = knitr_options(opts_chunk = list(dev = 'png')),
View(trndf.lm)
head(trndf.lm)
### one row in the df is one speakerline from the spoken data corpus, extracted in script: <14015.concrete-abstract_HA.R>
### the lemma make was annotated manually for concrete/light use in column <light> which can be [0] (FALSE) for concrete,
### and [1] for light use (TRUE).
### > aim is to compute the probability of occurence of make AND 5 semantic alternates in the corpus with respective
### to the concrete/light variant of make. all alternates are considered [concrete] per se.
### I try to apply the stats-package lm() function to get a p-value for each of the alt-categories (make+alternate verbs)
### that i assume to describe the probability of occurence (cf. Mehl 2021:14) of each verb (lemma).
### session: I am not sure how to work with the intercept of the dataset i.e. against which value the several
### instances of [0] and [1] in the dataset are to be evaluated to get a realistic p-value for each form.
#########################################################################################################
lm1<-lm(light~alt,trndf.lm)
summary(lm1)
df.int<-c(NA,NA,NA,NA,alt="0-intercept",0)
trndf.lm.2<-rbind(df.int,trndf.lm)
lm1<-lm(light~alt,trndf.lm.2)
summary(lm1)
df.int<-c(NA,NA,NA,NA,alt="0-intercept",1)
trndf.lm.2<-rbind(df.int,trndf.lm)
lm1<-lm(light~alt,trndf.lm.2)
summary(lm1)
sum(is.na(trndf.lm.2$light))
sum(trndf.lm.2$alt!="make")
m<-trndf.lm.2$alt!="make"
sum(m)
sum(trndf.lm.2$light==0)
sum(trndf.lm.2$light==1)
df.int<-c(NA,NA,NA,NA,alt="0-intercept",0) # if here set intercept-obs to 0 or 1 changes the p-value per category (verb)
trndf.lm.2<-rbind(df.int,trndf.lm)
sum(is.na(trndf.lm.2$light)) #0
sum(trndf.lm.2$alt!="make")
m<-trndf.lm.2$alt!="make" # all alternate obs to make
sum(m)
sum(trndf.lm.2$light==0)
#trndf.lm.2$light[m]<-0 # set all alternates to [light]
lm1<-lm(light~alt,trndf.lm.2)
summary(lm1)
sum(trndf.lm.2$light[m]==1)
#trndf.lm.2$light[m]<-0 # set all alternates to [light]
lm1<-lm(light~alt,trndf.lm.2)
summary(lm1)
sum(trndf.lm.2$light[m]==0)
#trndf.lm.2$light[m]<-0 # set all alternates to [light]
lm1<-lm(light~alt,trndf.lm.2)
summary(lm1)
df.int<-c(NA,NA,NA,NA,alt="0-intercept",1) # if here set intercept-obs to 0 or 1 changes the p-value per category (verb)
trndf.lm.2<-rbind(df.int,trndf.lm)
sum(is.na(trndf.lm.2$light)) #0
sum(trndf.lm.2$alt!="make")
m<-trndf.lm.2$alt!="make" # all alternate obs to make
sum(m)
#sum(trndf.lm.2$light[m]==0)
#trndf.lm.2$light[m]<-0 # set all alternates to [light]
lm1<-lm(light~alt,trndf.lm.2)
summary(lm1)
df.int<-c(NA,NA,NA,NA,alt="0-intercept",0) # if here set intercept-obs to 0 or 1 changes the p-value per category (verb)
trndf.lm.2<-rbind(df.int,trndf.lm)
sum(is.na(trndf.lm.2$light)) #0
sum(trndf.lm.2$alt!="make")
m<-trndf.lm.2$alt!="make" # all alternate obs to make
sum(m)
#sum(trndf.lm.2$light[m]==0)
#trndf.lm.2$light[m]<-0 # set all alternates to [light]
lm1<-lm(light~alt,trndf.lm.2)
summary(lm1)
lms<-summary(lm1)
lms
barplot(lms$coefficients[,1])
par(las=3)
barplot(lms$coefficients[,1])
###
# 2nd approach, percentage:
m1<-trndf.lm.2$alt=="make"
unique(trndf.lm.2$alt)
###
# 2nd approach, percentage:
verbfr<-array()
###
# 2nd approach, percentage:
verbfr<-array()
for(k in unique(trndf.lm.2$alt)){
u<-unique(trndf.lm.2$alt)[k]
m1<-trndf.lm.2$alt==u
verbfr[k]<-m1
names(verbfr)<-unique(trndf.lm.2$alt)
}
###
# 2nd approach, percentage:
verbfr<-array()
for(k in unique(trndf.lm.2$alt)){
u<-unique(trndf.lm.2$alt)[k]
m1<-sum(trndf.lm.2$alt==u)
verbfr[k]<-m1
names(verbfr)<-unique(trndf.lm.2$alt)
}
names(verbfr)
###
# 2nd approach, percentage:
verbfr<-array()
for(k in unique(trndf.lm.2$alt)){
u<-unique(trndf.lm.2$alt)[k]
m1<-sum(trndf.lm.2$alt==u)
verbfr[k]<-m1
}
names(verbfr)<-unique(trndf.lm.2$alt)
verbfr
k<-1
u<-unique(trndf.lm.2$alt)[k]
k<-2
u<-unique(trndf.lm.2$alt)[k]
m1<-sum(trndf.lm.2$alt==u)
for(k in unique(trndf.lm.2$alt)){
u<-unique(trndf.lm.2$alt)[k]
m1<-sum(trndf.lm.2$alt==u)
verbfr[k]<-m1
}
names(verbfr)<-unique(trndf.lm.2$alt)
verbfr
for(k in unique(trndf.lm.2$alt)){
u<-unique(trndf.lm.2$alt)[k]
m1<-sum(trndf.lm.2$alt==u,na.rm = T)
verbfr[k]<-m1
}
names(verbfr)<-unique(trndf.lm.2$alt)
verbfr
install.packages("tinytex")
install.packages("tinytex")
install.packages("remotes")
remotes::install_github("rstudio/bookdown")
remotes::install_github("ismayc/thesisdown")
